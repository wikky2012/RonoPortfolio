{"version":3,"file":"ngApolloBoost.umd.js","sources":["../../src/tokens.ts","../../src/apollo-boost.ts","../../src/apollo-boost-module.ts","../../src/ngApolloBoost.ts"],"sourcesContent":["import {InjectionToken} from '@angular/core';\n\nimport {PresetConfig} from './types';\n\nexport const APOLLO_BOOST_CONFIG = new InjectionToken<PresetConfig>(\n  '[apollo-angular-boost] config',\n);\n","import {Injectable} from '@angular/core';\nimport {ApolloLink, Observable} from 'apollo-link';\nimport {Apollo} from 'apollo-angular';\nimport {HttpLink} from 'apollo-angular-link-http';\nimport {withClientState} from 'apollo-link-state';\nimport {onError} from 'apollo-link-error';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\n\nimport {PresetConfig} from './types';\n\n@Injectable()\nexport class ApolloBoost {\n  constructor(private apollo: Apollo, private httpLink: HttpLink) {}\n\n  public create(config: PresetConfig) {\n    const cache =\n      config && config.cacheRedirects\n        ? new InMemoryCache({cacheRedirects: config.cacheRedirects})\n        : new InMemoryCache();\n\n    const stateLink =\n      config && config.clientState\n        ? withClientState({...config.clientState, cache})\n        : false;\n\n    const errorLink =\n      config && config.onError\n        ? onError(config.onError)\n        : onError(({graphQLErrors, networkError}) => {\n            if (graphQLErrors) {\n              graphQLErrors.map(({message, locations, path}) =>\n                // tslint:disable-next-line\n                console.log(\n                  `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n                ),\n              );\n            }\n            if (networkError) {\n              // tslint:disable-next-line\n              console.log(`[Network error]: ${networkError}`);\n            }\n          });\n\n    const requestHandler =\n      config && config.request\n        ? new ApolloLink(\n            (operation, forward) =>\n              new Observable((observer) => {\n                let handle: any;\n                Promise.resolve(operation)\n                  .then((oper) => config.request(oper))\n                  .then(() => {\n                    handle = forward(operation).subscribe({\n                      next: observer.next.bind(observer),\n                      error: observer.error.bind(observer),\n                      complete: observer.complete.bind(observer),\n                    });\n                  })\n                  .catch(observer.error.bind(observer));\n\n                return () => {\n                  if (handle) {\n                    handle.unsubscribe();\n                  }\n                };\n              }),\n          )\n        : false;\n\n    const httpLink = this.httpLink.create({\n      ...((config && config.httpOptions) || {}),\n      uri: (config && config.uri) || '/graphql',\n    });\n\n    const link = ApolloLink.from(\n      [errorLink, requestHandler, stateLink, httpLink].filter(\n        (x) => !!x,\n      ) as ApolloLink[],\n    );\n\n    this.apollo.create({\n      link,\n      cache,\n    });\n  }\n}\n","import {NgModule, Optional, Inject} from '@angular/core';\nimport {ApolloModule} from 'apollo-angular';\nimport {HttpLinkModule} from 'apollo-angular-link-http';\n\nimport {ApolloBoost} from './apollo-boost';\nimport {APOLLO_BOOST_CONFIG} from './tokens';\nimport {PresetConfig} from './types';\n\n@NgModule({\n  imports: [ApolloModule, HttpLinkModule],\n  providers: [ApolloBoost],\n})\nexport class ApolloBoostModule {\n  constructor(\n    boost: ApolloBoost,\n    @Optional()\n    @Inject(APOLLO_BOOST_CONFIG)\n    config?: PresetConfig,\n  ) {\n    if (config) {\n      boost.create(config);\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["InjectionToken","InMemoryCache","withClientState","onError","ApolloLink","Observable","Injectable","Apollo","HttpLink","NgModule","ApolloModule","HttpLinkModule","Optional","Inject"],"mappings":"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"}