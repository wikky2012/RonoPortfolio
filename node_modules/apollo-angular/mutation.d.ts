import { DocumentNode } from 'graphql';
import { Observable } from 'rxjs';
import { FetchResult } from 'apollo-link';
import { Apollo } from './apollo';
import { MutationOptionsAlone, R } from './types';
import * as ɵngcc0 from '@angular/core';
export declare class Mutation<T = {}, V = R> {
    protected apollo: Apollo;
    readonly document: DocumentNode;
    client: string;
    constructor(apollo: Apollo);
    mutate(variables?: V, options?: MutationOptionsAlone<T, V>): Observable<FetchResult<T>>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Mutation<any, any>, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<Mutation<any, any>>;
}

//# sourceMappingURL=mutation.d.ts.map