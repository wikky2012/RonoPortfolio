{"version":3,"file":"ast.js","sourceRoot":"","sources":["../../../schematics/utils/ast.ts"],"names":[],"mappings":";;;AAAA,2DAAqE;AACrE,+DAAwE;AACxE,qEAAwE;AACxE,2EAA0E;AAE1E,wBAAuD;AAEvD;;;;;;GAMG;AACH,SAAgB,2BAA2B,CACzC,IAAU,EACV,kBAA0B,EAC1B,kBAA0B,EAC1B,WAAoB;IAEpB,MAAM,QAAQ,GAAG,cAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAChD,MAAM,aAAa,GAAG,+BAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACvD,uBAAuB,CACrB,IAAI,EACJ,aAAa,EACb,kBAAkB,EAClB,kBAAkB,CACnB,CAAC;AACJ,CAAC;AAdD,kEAcC;AAED;;;;;;GAMG;AACH,SAAS,uBAAuB,CAC9B,IAAU,EACV,gBAAwB,EACxB,kBAA0B,EAC1B,kBAA0B;IAE1B,MAAM,YAAY,GAAG,0BAAuB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;IAErE,IAAI,CAAC,YAAY,EAAE;QACjB,MAAM,IAAI,gCAAmB,CAAC,qBAAqB,gBAAgB,EAAE,CAAC,CAAC;KACxE;IAED,MAAM,OAAO,GAAG,6BAAiB,CAC/B,YAAmB,EAAE,mCAAmC;IACxD,gBAAgB,EAChB,kBAAkB,EAClB,kBAAkB,CACnB,CAAC;IACF,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;IAEpD,OAAO;SACJ,MAAM,CAAC,CAAC,MAAc,EAAE,EAAE,CAAC,MAAM,YAAY,qBAAY,CAAC;SAC1D,OAAO,CAAC,CAAC,MAAoB,EAAE,EAAE,CAChC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAC9C,CAAC;IAEJ,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AAC9B,CAAC","sourcesContent":["import {Tree, SchematicsException} from '@angular-devkit/schematics';\nimport {InsertChange, Change} from '@schematics/angular/utility/change';\nimport {addImportToModule} from '@schematics/angular/utility/ast-utils';\nimport {getAppModulePath} from '@schematics/angular/utility/ng-ast-utils';\n\nimport {getMainPath, getTypeScriptSourceFile} from '.';\n\n/**\n * Import and add module to the root module.\n * @param host {Tree} The source tree.\n * @param importedModuleName {String} The name of the imported module.\n * @param importedModulePath {String} The location of the imported module.\n * @param projectName {String} The name of the project.\n */\nexport function addModuleImportToRootModule(\n  host: Tree,\n  importedModuleName: string,\n  importedModulePath: string,\n  projectName?: string,\n) {\n  const mainPath = getMainPath(host, projectName);\n  const appModulePath = getAppModulePath(host, mainPath);\n  addModuleImportToModule(\n    host,\n    appModulePath,\n    importedModuleName,\n    importedModulePath,\n  );\n}\n\n/**\n * Import and add module to specific module path.\n * @param host {Tree} The source tree.\n * @param moduleToImportIn {String} The location of the module to import in.\n * @param importedModuleName {String} The name of the imported module.\n * @param importedModulePath {String} The location of the imported module.\n */\nfunction addModuleImportToModule(\n  host: Tree,\n  moduleToImportIn: string,\n  importedModuleName: string,\n  importedModulePath: string,\n) {\n  const moduleSource = getTypeScriptSourceFile(host, moduleToImportIn);\n\n  if (!moduleSource) {\n    throw new SchematicsException(`Module not found: ${moduleToImportIn}`);\n  }\n\n  const changes = addImportToModule(\n    moduleSource as any, // XXX @schematics/angular went mad\n    moduleToImportIn,\n    importedModuleName,\n    importedModulePath,\n  );\n  const recorder = host.beginUpdate(moduleToImportIn);\n\n  changes\n    .filter((change: Change) => change instanceof InsertChange)\n    .forEach((change: InsertChange) =>\n      recorder.insertLeft(change.pos, change.toAdd),\n    );\n\n  host.commitUpdate(recorder);\n}\n"]}